{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SAD",
	"scopeName": "source.sad",
	"patterns": [
	  { "include": "#comments" },
	  { "include": "#numbers" },
	  { "include": "#particles" },
	  { "include": "#types" },
	  { "include": "#operators" },
	  { "include": "#controls" },
	  { "include": "#keywords" },
	  { "include": "#functions" },
	  { "include": "#objects" },
	  { "include": "#internals" },
	  { "include": "#math" },
	  { "include": "#macros" },
	  { "include": "#strings" },
	  { "include": "#block" }
	],
	"repository": {
	  "attributes": {
		"patterns": [
		  { "include" : "#attributes-stringval" },
		  { "include" : "#attributes-singular" },
		  { "include" : "#attributes-default" }
		]
	  },
	  "attributes-stringval": {
		"patterns": [
		  {
			"match": "(?xi)\\b(Get|Read|Close|Write|Thread|Map|Apply)\\s*(=)\\s*(.+?)\\s*(?=[,;\\s])",
			"captures": {
			  "1": {"name": "variable.other.attribute.sad"},
			  "2": {"name": "punctuation.sad"},
			  "3": {"name": "string.unquoted.format.sad"}
			}
		  }
		]
	  },
	  "attributes-singular": {
		"patterns": [
		  {
			"match": "(?xi)\\b(?<!\\.)(Twiss|LINE|Position|TrackParticle|TransferMatrix|TWAKE|LWAKE|FIT|FREE|FIX|GO)\\b",
			"name": "variable.other.attribute.sad"
		  }
		]
	  },
	  "attributes-default": {
		"patterns": [
		  {
			"match": "(?xi)\\b([a-zA-Z]?[a-zA-Z0-9_]*)\\s*(=)",
			"captures": {
			  "1": {"name": "variable.other.attribute.sad"},
			  "2": {"name": "punctuation.sad"}
			}
		  }
		]
	  },
	  "functions": {
		"patterns": [
		  {
			"begin": "(?xi)\\b(?<!\\.)(ToString)(\\s*\\()",
			"beginCaptures": {
			  "1": {"name": "support.function.sad"},
			  "2": {"name": "punctuation.sad"}
			},
			"patterns": [
			  { "include": "#innards" }
			],
			"end": "\\)",
			"endCaptures": {
			  "0": {"name": "punctuation.sad"}
			}
		  }
		]
	  },
	  "innards": {
		"patterns": [
		  { "include": "#numbers" },
		  { "include": "#operators" },
		  { "include": "#keywords" },
		  { "include": "#objects" },
		  { "include": "#internals" },
		  { "include": "#math" },
		  { "include": "#strings" }
		]
	  },
	  "macros": {
		"patterns": [
		  { "include": "#macrodef-input" },
		  { "include": "#macrodef-noinput" }
		]
	  },
	  "macrodef-input": {
		"patterns": [
		  {
			"begin": "(?xi)\\b([a-zA-Z_][a-zA-Z0-9_]*)(\\s*\\()(?=.*\\)\\s*:\\s*macro)",
			"beginCaptures": {
			  "1": {"name": "entity.name.function.macro.input.sad"},
			  "2": {"name": "punctuation.sad"}
			},
			"end": "\\)",
			"endCaptures": {
			  "0": {"name": "punctuation.sad"}
			},
			"patterns": [
			  { "include": "#internals" },
			  { "include": "#numbers" },
			  { "include": "#strings" }
			]
		  }
		]
	  },
	  "macrodef-noinput": {
		"patterns": [
		  {
			"match": "(?xi)\\b([a-zA-Z]?[a-zA-Z0-9_]*)\\s*(:)\\s*(?=macro)",
			"captures": {
			  "1": {"name": "entity.name.function.macro.noinput.sad"},
			  "2": {"name": "punctuation.sad"}
			}
		  }
		]
	  },
	  "objects": {
		"patterns": [
		  {
			"match": "(?xi)\\b(?<!\\.)(beam)(?=%|->)\\b",
			"name": "support.class.sad"
		  }
		]
	  },
	  "internals": {
		"patterns": [
		  {
			"match": "(?xi)\\b(?<!\\.)(Degree|GoldenRatio|I|INF|Infinity|NaN|Pi|SpeedOfLight)(?!\\.)\\b",
			"name": "constant.language.sad"
		  },
		  {
			"match": "(?xi)\\b(?<!\\.)(DX|DY|BX|BY|SIGX|SIGY|NX|NY|K[0-9])\\b",
			"name": "variable.language.internal.sad"
		  }
		]
	  },
	  "keywords": {
		"patterns": [
		  {
			"match": "(?i)\\b(?<!\\.)(If|ELSEIF|ELSE|While|Do)\\b",
			"name": "keyword.control.conditional.sad"
		  },
		  {
			"match": "(?i)\\b(?<!\\.)(macro)(?=\\s*=)\\b",
			"name": "keyword.control.macro.sad"
		  },
		  {
			"match": "(?i)\\b(?<!\\.)(end|abort|Update)\\b",
			"name": "keyword.control.command.sad"
		  }
		]
	  },
	  "controls": {
		"patterns": [
		  {
			"begin": "(?xi)\\b(?<!\\.)(exec)(\\s*[\\,\\s])([a-zA-Z]?[a-zA-Z0-9_]*)(\\s*\\()",
			"beginCaptures": {
			  "1": {"name": "keyword.control.sad"},
			  "2": {"name": "punctuation.sad"},
			  "3": {"name": "entity.name.function.macro.input.sad"},
			  "4": {"name": "punctuation.sad"}
			},
			"end": "\\)\\s*;",
			"endCaptures": {
			  "0": {"name": "punctuation.sad"}
			},
			"patterns": [
			  { "include": "#internals" },
			  { "include": "#functions" },
			  { "include": "#objects" },
			  { "include": "#math" },
			  { "include": "#particles" },
			  { "include": "#numbers" },
			  { "include": "#strings" }
			]
		  },
		  {
			"begin": "(?xi)\\b(?<!\\.)(Print)(\\s*[\\,\\s])",
			"beginCaptures": {
			  "1": {"name": "keyword.control.sad"},
			  "2": {"name": "punctuation.sad"}
			},
			"end": ";",
			"endCaptures": {
			  "0": {"name": "punctuation.sad"}
			},
			"patterns": [
			  { "include": "#attributes" },
			  { "include": "#flags" },
			  { "include": "#internals" },
			  { "include": "#functions" },
			  { "include": "#objects" },
			  { "include": "#math" },
			  { "include": "#particles" },
			  { "include": "#numbers" },
			  { "include": "#strings" }
			]
		  }
		]
	  },
	  "flags": {
		"patterns": [
		  {
			"match": "(?xi)\\b(?<!\\.)(error|makethin|save|sectormap|seqedit)\\b",
			"name": "constant.flag.sad"
		  }
		]
	  },
	  "particles": {
		"patterns": [
		  {
			"match": "(?xi)\\b(?<!\\.)(positron|electron|proton|antiproton|posmuon|negmuon|ion)\\b",
			"name": "constant.numeric.particle.sad"
		  }
		]
	  },
	  "math": {
		"patterns": [
		  {
			"match": "(?xi)\\b(?<!\\.)(Statistics|ArcCos|ArcCosh|ArcSin|ArcSinh|ArcTan|ArcTanh|Cos|Cosh|Exp|Sqrt|Tan|Tanh|BesselI|BesselJ|BesselK|BesselY|BesselJZero|Erf|Erfc|Abs|Ceiling|Floor|Max|Min|MinMax|Mod|Negative|Round|Sign|FractionalPart|Det|Eigensystem|IdentityMatrix|Inner|LinearSolve|Outer|SingularValues|Transpose|GaussRandom|Random|SeedRandom)\\b",
			"name": "support.function.sad"
		  }
		]
	  },
	  "strings": {
		"patterns": [
		  {
			"name": "string.quoted.double.sad",
			"begin": "\"",
			"end": "\"",
			"patterns": [
			  {
				"name": "constant.character.escape.sad",
				"match": "\\\\."
			  }
			]
		  },
		  {
			"name": "string.quoted.single.sad",
			"begin": "'",
			"end": "'",
			"patterns": [
			  {
				"name": "constant.character.escape.sad",
				"match": "\\\\."
			  }
			]
		  }
		]
	  },
	  "numbers": {
		"patterns": [
		  {
			"match": "\\b(?<!\\.)([0-9]+\\.{1}[0-9]*)([eEdD]{1}[\\-|\\+]?[0-9]+)?\\b",
			"captures": {
			  "1": {"name": "constant.numeric.float.sad"},
			  "2": {"name": "constant.numeric.exponential.sad"}
			}
		  },
		  {
			"match": "\\b(?<!\\.)([0-9]+)([eEdD]{1}[\\-|\\+]?[0-9]+)?\\b",
			"captures": {
			  "1": {"name": "constant.numeric.integer.sad"},
			  "2": {"name": "constant.numeric.exponential.sad"}
			}
		  },
		  {
			"match": "\\b(?<!\\.)(True|False)\\b",
			"captures": {
			  "1": {"name": "constant.numeric.boolean.sad"}
			}
		  }
		]
	  },
	  "comments": {
		"patterns": [
		  {
			"begin": "!",
			"end": "\\n",
			"name": "comment.line.sad"
		  },
		  {
			"begin": "!",
			"end": "\\n\\r",
			"name": "comment.line.sad"
		  }
		]
	  },
	  "types": {
		"patterns": [
		  {
			"match": "(?i)\\b(?<!\\.)(const)\\b",
			"name": "storage.modifier.sad"
		  },
		  {
			"match": "(?i)\\b(?<!\\.)(Real|int)\\b",
			"name": "storage.type.sad"
		  }
		]
	  },
	  "operators": {
		"patterns": [
		  {
			"match": "==|<>|<|>|<=|=>",
			"name": "keyword.operator.comparison.sad"
		  }
		]
	  }
	}
  }